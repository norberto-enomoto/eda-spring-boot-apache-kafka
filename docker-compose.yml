version: '3'
services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_USER: root      
      MYSQL_ROOT_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d      
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - app-network

  eureka-service:    
    container_name: eureka-service
    build:
      context: ./eureka-service
      dockerfile: Dockerfile    
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_started
    ports:
      - "8761:8761"
    networks:
      - app-network

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile    
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      EUREKA_CLIENT_SERVICE-URL_DEFAULTZONE: http://eureka-service:8761/eureka/      
    depends_on:
      customer-service:
        condition: service_started
      product-service:
        condition: service_started
      order-service:
        condition: service_started
      consumer-service:
        condition: service_started
    networks:
      - app-network

  customer-service:    
    container_name: customer-service
    build:
      context: ./customer-service
      dockerfile: Dockerfile    
    depends_on:
      eureka-service:
        condition: service_started
      mysql:
        condition: service_healthy
      kafka:
        condition: service_started
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      EUREKA_CLIENT_SERVICE-URL_DEFAULTZONE: http://eureka-service:8761/eureka/
    networks:
      - app-network

  product-service:    
    container_name: product-service
    build:
      context: ./product-service
      dockerfile: Dockerfile    
    depends_on:
      eureka-service:
        condition: service_started
      mysql:
        condition: service_healthy
      kafka:
        condition: service_started
    ports:
      - "8082:8082"
    environment:
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      EUREKA_CLIENT_SERVICE-URL_DEFAULTZONE: http://eureka-service:8761/eureka/
    networks:
      - app-network

  order-service:    
    container_name: order-service
    build:
      context: ./order-service
      dockerfile: Dockerfile    
    depends_on:
      eureka-service:
        condition: service_started
      mysql:
        condition: service_healthy
      kafka:
        condition: service_started
    ports:
      - "8083:8083"
    environment:
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      EUREKA_CLIENT_SERVICE-URL_DEFAULTZONE: http://eureka-service:8761/eureka/
    networks:
      - app-network

  consumer-service:    
    container_name: consumer-service
    build:
      context: ./consumer-service
      dockerfile: Dockerfile    
    depends_on:
      eureka-service:
        condition: service_started
      mysql:
        condition: service_healthy
      kafka:
        condition: service_started
    ports:
      - "8084:8084"
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      EUREKA_CLIENT_SERVICE-URL_DEFAULTZONE: http://eureka-service:8761/eureka/
    networks:
      - app-network
  
  
networks:
  app-network:
    driver: bridge

volumes:
  mysql-data: